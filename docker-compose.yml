version: '2'

volumes:
  redis: 
  postgres:
  stack-blob:
  stack-data:
  node-red-data:
  grafana-data:
  influxdb-data:
  influxdb-etc:

services:

  # ------------------------------------------------------------------------------------
  # The Things Stack Open Source Edition
  # ------------------------------------------------------------------------------------
  postgres:
    image: postgres:14.3-alpine3.15
    container_name: postgres
    restart: unless-stopped
    environment:
        - POSTGRES_PASSWORD=root
        - POSTGRES_USER=root
        - POSTGRES_DB=ttn_lorawan
    volumes:
        - 'postgres:/var/lib/postgresql/data'
    ports:
        - "127.0.0.1:5432:5432"
    
  redis:
    image: redis:7.0.0-alpine3.15
    container_name: redis
    command: redis-server --appendonly yes
    restart: unless-stopped
    volumes:
        - 'redis:/data'
    ports:
        - "127.0.0.1:6379:6379"
  
  stack:
    image: xoseperez/the-things-stack:latest
    container_name: stack
    restart: unless-stopped
    depends_on:
        - redis
        - postgres
    volumes:
        - 'stack-blob:/srv/ttn-lorawan/public/blob'
        - 'stack-data:/srv/data'
    environment:
        TTS_DOMAIN: lns.example.com        # set this to the IP or domain name of the host you will be using to access the stack
        TTN_LW_BLOB_LOCAL_DIRECTORY: /srv/ttn-lorawan/public/blob
        TTN_LW_REDIS_ADDRESS: redis:6379
        TTN_LW_IS_DATABASE_URI: postgres://root:root@postgres:5432/ttn_lorawan?sslmode=disable
        CLI_AUTO_LOGIN: "false"
    labels:
        io.balena.features.balena-api: '1'

    ports:
    
        - "80:1885"
        - "443:8885"
    
        - "1881:1881"
        - "1882:1882"
        - "1883:1883"
        - "1884:1884"
        - "1885:1885"
        - "1887:1887"
    
        - "8881:8881"
        - "8882:8882"
        - "8883:8883"
        - "8884:8884"
        - "8885:8885"
        - "8887:8887"
    
        - "1700:1700/udp"
    
  # ------------------------------------------------------------------------------------
  # LoRa Basics™ Station Packet Forwarder
  # ------------------------------------------------------------------------------------
  basicstation:
    image: xoseperez/basicstation:latest
    container_name: basicstation
    restart: unless-stopped
    privileged: true
    network_mode: host
    labels:
        io.balena.features.kernel-modules: '1'
        io.balena.features.firmware: '1'
        io.balena.features.dbus: '1'
        io.balena.features.supervisor-api: '1'
        io.balena.features.balena-api: '1'

  # ------------------------------------------------------------------------------------
  # Semtech Legacy UDP Packet Forwarder
  # Alternative to the Basics™ Station Packet Forwarder, do not use both at the same time.
  # This one is NOT recommended but still widely used and supported.
  # ------------------------------------------------------------------------------------
  #legacy:
  #  image: rakwireless/udp-packet-forwarder:latest
  #  container_name: udp-packet-forwarder
  #  restart: unless-stopped
  #  privileged: true
  #  network_mode: host
  #  labels:
  #    io.balena.features.kernel-modules: '1'
  #    io.balena.features.firmware: '1'
  #    io.balena.features.dbus: '1'
  #    io.balena.features.supervisor-api: '1'
  #    io.balena.features.balena-api: '1'

  # ------------------------------------------------------------------------------------
  # BalenaLabs WiFi-Connect
  # ------------------------------------------------------------------------------------
  wifi-connect:
    image: balenablocks/wifi-connect:rpi
    container_name: wifi-connect
    network_mode: "host"
    labels:
        io.balena.features.dbus: '1'
        io.balena.features.firmware: '1'
    cap_add:
        - NET_ADMIN
    environment:
        DBUS_SYSTEM_BUS_ADDRESS: "unix:path=/host/run/dbus/system_bus_socket"

  # ------------------------------------------------------------------------------------
  # Node-RED
  # ------------------------------------------------------------------------------------
  node-red:
    image: bh.cr/balenalabs/balena-node-red
    #build: ./node-red
    container_name: node-red
    privileged: true
    restart: unless-stopped
    volumes:
        - 'node-red-data:/data'
    labels:
        io.balena.features.dbus: '1'
        io.balena.features.sysfs: '1'
        io.balena.features.supervisor-api: '1'
        io.balena.features.balena-api: '1'
    ports:
        - 1880:1880
    environment:
        PORT: 1880
        USERNAME: "balena"
        PASSWORD: "balena"
        ENCRIPTION_KEY: "balena"        
    cap_add:
        - SYS_RAWIO
    devices:
        - "/dev/mem:/dev/mem"
        - "/dev/gpiomem:/dev/gpiomem"
        - "/dev/i2c-1:/dev/i2c-1"

  # ------------------------------------------------------------------------------------
  # Influxdb
  # ------------------------------------------------------------------------------------
  influxdb:
    image: influxdb:1.7.11
    container_name: influxdb
    restart: unless-stopped
    volumes:
        - influxdb-data:/var/lib/influxdb
        - influxdb-etc:/etc/influxdb

  # ------------------------------------------------------------------------------------
  # Grafana
  # ------------------------------------------------------------------------------------
  grafana:
    image: balenablocks/dashboard
    container_name: grafana
    restart: unless-stopped
    ports:
        - 3000:80
    volumes:
        - "grafana-data:/data"
